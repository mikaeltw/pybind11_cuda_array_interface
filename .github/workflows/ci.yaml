name: CI



on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  release:
    types: [published]



jobs:
  build_and_test:
    name: Build pycai and run tests
    runs-on: self-hosted
    strategy:
      matrix:
        cuda_version: ['11.6']
        python: ['3.8', '3.9', '3.10']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python }}

    - name: Create Python venv
      run: |
        python -m venv venv

    - name: Set CUDA version for the runner
      run: |
        CUDA_HOME="/usr/local/cuda-${{ matrix.cuda_version }}"
        echo "CUDA_HOME=${CUDA_HOME}" >> $GITHUB_ENV

        if [[ -n "${{ env.LD_LIBRARY_PATH }}" ]]; then
          echo "LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${{ env.LD_LIBRARY_PATH }}" >> $GITHUB_ENV
        else
          echo "LD_LIBRARY_PATH=${CUDA_HOME}/lib64" >> $GITHUB_ENV
        fi

        echo "${CUDA_HOME}/bin" >> $GITHUB_PATH

    - name: Upgrade pip
      run: |
        source venv/bin/activate
        python -m pip install -U pip>=22.3

    - name: Install the cupy wheel matching the CUDA version of the host
      run: |
        source venv/bin/activate
        python tests/install_cupy.py

    - name: Install pybind11_cuda_array_interface for testing
      run: |
        source venv/bin/activate
        BUILD_GTESTS=ON BUILD_PYTESTS=ON python -m pip install .[test]

    - name: Run Pytest
      run: |
        source venv/bin/activate
        python -m pytest

    - name: Run GoogleTest
      run: |
        source venv/bin/activate
        tests/gtest/run_gtest_cai

    - name: Clean the self-hosted runner
      if: always()
      run: |
        rm -rf venv
        find $GITHUB_WORKSPACE/. ! -name . -prune -exec rm -rf {} +



  packaging:
    name: Package pycai for PyPI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.8

    - name: Install packaging tools
      run: |
        python -m pip install build twine

    - name: Build source distribution
      run: |
        python -m build --sdist

    - name: Check metadata
      run: |
        python -m twine check dist/*

    - name: Store the package version
      uses: actions/upload-artifact@v3
      with:
        name: pycai_version
        path: pybind11_cuda_array_interface/version.py

    - name: Store the source build
      uses: actions/upload-artifact@v3
      with:
        name: pycai_source_build
        path: dist/*

    - name: Store the install CuPy script
      uses: actions/upload-artifact@v3
      with:
        name: install_cupy
        path: tests/install_cupy.py



  test_upload_pypi:
    name: Upload pycai to Test-PyPI
    needs: [build_and_test, packaging]
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Fetch packaged source build
        uses: actions/download-artifact@v3
        with:
          name: pycai_source_build
          path: pycai_source_build

      - name: Publish package to test PYPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_PYCAI_API_TOKEN }}
          packages-dir: pycai_source_build/
          repository-url: https://test.pypi.org/legacy/



  test_pypi_package:
    name: Test pycai from TestPyPI
    needs: [test_upload_pypi]
    runs-on: self-hosted
    strategy:
      matrix:
        cuda_version: ['11.6']
        python: ['3.8']

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Fetch version from packaged source build
        uses: actions/download-artifact@v3
        with:
          name: pycai_version

      - name: Extract version
        id: get_version
        run: |
          echo "VERSION=$(awk -F\' '/__version__ = version = / {print $2}' version.py)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Set CUDA version for the runner
        run: |
          CUDA_HOME="/usr/local/cuda-${{ matrix.cuda_version }}"
          echo "CUDA_HOME=${CUDA_HOME}" >> $GITHUB_ENV

          if [[ -n "${{ env.LD_LIBRARY_PATH }}" ]]; then
            echo "LD_LIBRARY_PATH=${CUDA_HOME}/lib64:${{ env.LD_LIBRARY_PATH }}" >> $GITHUB_ENV
          else
            echo "LD_LIBRARY_PATH=${CUDA_HOME}/lib64" >> $GITHUB_ENV
          fi

          echo "${CUDA_HOME}/bin" >> $GITHUB_PATH

      - name: Create Python venv
        run: |
          python -m venv venv

      - name: Upgrade pip
        run: |
          source venv/bin/activate
          python -m pip install -U pip>=22.3

      - name: Fetch install_cupy.py script
        uses: actions/download-artifact@v3
        with:
          name: install_cupy

      - name: Install the cupy wheel matching the CUDA version of the host
        run: |
          source venv/bin/activate
          python install_cupy.py

      - name: Check that library is not present before installation
        run: |
          output=$(find / -name pybind11_cuda_array_interface.hpp 2>/dev/null || true)
          if [ -n "$output" ]; then
              echo "$output"
              echo "Error: 'find' found 'pybind11_cuda_array_interface.hpp'"
              exit 1
          fi
        shell: bash

        # Retries are needed since the upload to Test PyPI might not have been indexed yet after
        # the upload in the previous step.
      - name: Install pybind11_cuda_array_interface for testing
        uses: nick-fields/retry@v2
        with:
          timeout_minutes: 10
          max_attempts: 3
          retry_wait_seconds: 60
          retry_on: error
          shell: bash
          command: source venv/bin/activate && python -m pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ pybind11-cuda-array-interface==${{ steps.get_version.outputs.VERSION }}

      - name: Check that pycai headers are installed after the pip install command
        run: |
          output=$(find / -name pybind11_cuda_array_interface.hpp 2>/dev/null || true)
          if [ -z "$output" ]; then
              echo "Error: 'find' did not find 'pybind11_cuda_array_interface.hpp'"
              exit 1
          fi
        shell: bash

      - name: Clean the self-hosted runner
        if: always()
        run: |
          rm -rf venv
          find $GITHUB_WORKSPACE/. ! -name . -prune -exec rm -rf {} +
        shell: bash



  upload_pypi:
    name: Upload pycai to PyPI
    if: github.event_name == 'release' && github.event.action == 'published'
    needs: [test_pypi_package]
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Fetch packaged source build
        uses: actions/download-artifact@v3
        with:
          name: pycai_source_build
          path: pycai_source_build

      - name: Publish package to PYPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_PYCAI_API_TOKEN }}
          packages-dir: pycai_source_build/
